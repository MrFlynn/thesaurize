name: Release

on:
  push:
    tags:
      - 'v*'

env:
  PLATFORMS: linux/amd64,linux/arm64
  IMAGE_NAME: mrflynn/thesaurize

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Run goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  create-image:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}

          TAGS="--tag ${IMAGE_NAME}:${VERSION} --tag ${IMAGE_NAME}:latest"
          BUILD_ARGS="--build-arg VERSION=${VERSION} --build-arg COMMIT=${GITHUB_SHA}"
          LABELS="--label=org.opencontainers.image.created=$(date -u --rfc-3339=date) \
            --label=org.opencontainers.image.name=thesaurize \
            --label=org.opencontainers.image.version=${VERSION} \
            --label=org.opencontainers.image.licenses=MIT \
            --label=org.opencontainers.image.revision=${GITHUB_SHA}"

          echo ::set-output name=build_args::--platform ${PLATFORMS} \
            ${BUILD_ARGS} \
            ${LABELS} \
            ${TAGS} \
            --push .
      - name: Login to hub.docker.com
        uses: azure/docker-login@v1
        with:
          username: mrflynn
          password: ${{ secrets.DOCKER_REGISTRY_KEY }}
      - name: Setup Buildx
        uses: crazy-max/ghaction-docker-buildx@v3.1.0
      - name: Build image
        run: |
          docker buildx build ${{ steps.Setup.outputs.build_args }}